{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","console","log","axios","get","then","response","data","newObject","post","id","put","Notification","message","length","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","Footer","style","color","fontStyle","fontSize","map","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"kNAaiBA,EAXJ,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBACzB,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,K,gBCPtCK,EAAU,kCAsBD,EAnBA,WAGX,OAFAC,QAAQC,IAAI,4BACIC,IAAMC,IAAIJ,GACXK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAgB9B,EAbA,SAAAC,GAGX,OAFAP,QAAQC,IAAI,2BACIC,IAAMM,KAAKT,EAASQ,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAU9B,EAPA,SAACG,EAAIF,GAGhB,OAFAP,QAAQC,IAAI,2BACKC,IAAMQ,IAAN,UAAaX,EAAb,YAAwBU,GAAMF,GAChCH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCN9BK,EAXM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,GAAuC,IAAnBA,EAAQC,OACvB,KAIP,yBAAKjB,UAAU,SACZgB,ICkGME,EAtGH,SAACC,GAAW,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,OAESF,mBAAS,IAFlB,mBAEdG,EAFc,KAELC,EAFK,OAGSJ,oBAAS,GAHlB,mBAGdK,EAHc,KAGLC,EAHK,OAImBN,mBAAS,IAJ5B,mBAIdO,EAJc,KAIAC,EAJA,KAMrBC,qBAAU,WACRC,IAEGtB,MAAK,SAAAuB,GACJT,EAASS,QAEZ,IAEH,IAqBMC,EAAcP,EAChBJ,EACAA,EAAMY,QAAO,SAAArC,GAAI,OAAuB,IAAnBA,EAAKG,aAsBxBmC,EAAS,WAMb,OACE,yBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAIR,6BACA,uGAKN,OACE,6BACE,qCACA,kBAAC,EAAD,CAActB,QAASW,IACvB,6BACE,4BAAQzB,QAAS,kBAAMwB,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACGO,EAAYO,KAAI,SAAA3C,GAAI,OACnB,kBAAC,EAAD,CACE4C,IAAK5C,EAAKiB,GACVjB,KAAMA,EACNC,iBAAkB,kBAzED,SAACgB,GAC1BT,QAAQC,IAAR,0CAA+CQ,IAC/C,IAAMjB,EAAOyB,EAAMoB,MAAK,SAAAC,GAAC,OAAIA,EAAE7B,KAAOA,KAChC8B,EAAW,2BAAQ/C,GAAR,IAAcG,WAAYH,EAAKG,YAEhD+B,EACUjB,EAAI8B,GACXnC,MAAK,SAAAoC,GACJtB,EAASD,EAAMkB,KAAI,SAAA3C,GAAI,OAAIA,EAAKiB,KAAOA,EAAKjB,EAAOgD,SAEpDC,OAAM,SAAAC,GACLlB,EAAgB,aAAD,OACAhC,EAAKK,QADL,sCAGf8C,YAAW,WACTnB,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAAS,GAAC,OAAIA,EAAE7B,KAAOA,SAwDRmC,CAAmBpD,EAAKiB,WAGtD,0BAAMoC,SAnDM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBnD,QAASsB,EACT8B,MAAM,IAAIC,MAAOC,cACjBxD,UAAWyD,KAAKC,SAAW,IAG7B3B,EACUsB,GACP5C,MAAK,SAAAoC,GACJtB,EAASD,EAAMqC,OAAOd,IACtBpB,EAAW,SAwCX,2BACEmC,MAAOpC,EACPqC,SAtCiB,SAACV,GACxB1B,EAAW0B,EAAMW,OAAOF,UAuCpB,4BAAQG,KAAK,UAAb,SAEF,kBAAC5B,EAAD,Q,MCjGN6B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.555ca97c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance}) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'  \r\n    return (\r\n      <li className='note'>\r\n        {note.content}\r\n        <button onClick={toggleImportance}>{label}</button>\r\n      </li>\r\n    )\r\n  }\r\n\r\n  export default Note","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/notes'\r\n\r\n\r\nconst getAll = () => {\r\n    console.log('get all promise returned')\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    console.log('create promise returned')\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    console.log('update promise returned')\r\n    const request =  axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n\r\n}\r\n\r\nexport default { getAll, create, update }","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null || message.length === 0) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\nimport Notification from './components/Notification'\n\nconst App = (props) => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState('')\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  const toggleImportanceOf = (id) => {\n    console.log(`importance changed on note id:  ${id}`)\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `the note '${note.content}' was already deleted from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important === true)\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const Footer = () => {\n    const footerStyle = {\n      color: 'green',\n      fontStyle: 'italic',\n      fontSize: 16\n    }\n    return (\n      <div style={footerStyle}>\n        <br />\n        <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note =>\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)} />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}